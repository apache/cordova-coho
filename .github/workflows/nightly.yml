# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

name: Cordova Nightly

on:
  workflow_dispatch:
    inputs:
      dispatchReason:
        description: 'Reason of Manual Dispatch'
        required: true
        default: 'Re-run broken nightly build'

      verbose:
        description: 'Enable Coho Verbose'
        required: true
        default: 'false'

  schedule:
    - cron: '0 0 * * *'

jobs:
  build:
    if: github.repository == 'apache/cordova-coho'

    runs-on: ubuntu-latest

    env:
      # Since npm loglevel is not boolean, it will always be in verbose mode to better debug errors.
      npm_config_loglevel: verbose

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 18.x
          registry-url: 'https://registry.npmjs.org'

      - name: Dispatch Inputs
        run: |
          echo "Dispatch Reason: ${{ github.event.inputs.dispatchReason }}"
          echo "Enable Verbose: ${{ github.event.inputs.verbose }}"

      - name: Cordova Coho - Setup
        run: |
          npm i
          npm link

      - name: Cordova Coho - Create Nightlies
        run: |
          cd ..
          coho nightly \
            -r cli \
            -r lib \
            -r common \
            -r fetch \
            -r serve \
            -r create \
            -r node-xcode \
            -r android \
            -r electron \
            -r ios \
            --pretend \
            --verbose ${{ github.event.inputs.verbose == 'true' }}

      - name: NPM whoami
        run: npm whoami
        env:
          NODE_AUTH_TOKEN: ${{ secrets.CORDOVA_NPM_TOKEN }}

      - name: NPM Publish - cordova-cli
        run: |
          cd ../cordova-cli
          npm publish --tag nightly
        env:
          NODE_AUTH_TOKEN: ${{ secrets.CORDOVA_NPM_TOKEN }}

      - name: NPM Publish - cordova-lib
        run: |
          cd ../cordova-lib
          npm publish --tag nightly
        env:
          NODE_AUTH_TOKEN: ${{ secrets.CORDOVA_NPM_TOKEN }}

      - name: NPM Publish - cordova-common
        run: |
          cd ../cordova-common
          npm publish --tag nightly
        env:
          NODE_AUTH_TOKEN: ${{ secrets.CORDOVA_NPM_TOKEN }}

      - name: NPM Publish - cordova-fetch
        run: |
          cd ../cordova-fetch
          npm publish --tag nightly
        env:
          NODE_AUTH_TOKEN: ${{ secrets.CORDOVA_NPM_TOKEN }}

      - name: NPM Publish - cordova-serve
        run: |
          cd ../cordova-serve
          npm publish --tag nightly
        env:
          NODE_AUTH_TOKEN: ${{ secrets.CORDOVA_NPM_TOKEN }}

      - name: NPM Publish - cordova-create
        run: |
          cd ../cordova-create
          npm publish --tag nightly
        env:
          NODE_AUTH_TOKEN: ${{ secrets.CORDOVA_NPM_TOKEN }}

      - name: NPM Publish - cordova-node-xcode
        run: |
          cd ../cordova-node-xcode
          npm publish --tag nightly
        env:
          NODE_AUTH_TOKEN: ${{ secrets.CORDOVA_NPM_TOKEN }}

      - name: NPM Publish - cordova-android
        run: |
          cd ../cordova-android
          npm i
          npm publish --tag nightly
        env:
          NODE_AUTH_TOKEN: ${{ secrets.CORDOVA_NPM_TOKEN }}

      - name: NPM Publish - cordova-electron
        run: |
          cd ../cordova-electron
          npm i
          npm publish --tag nightly
        env:
          NODE_AUTH_TOKEN: ${{ secrets.CORDOVA_NPM_TOKEN }}

      - name: NPM Publish - cordova-ios
        run: |
          cd ../cordova-ios
          npm i
          npm publish --tag nightly
        env:
          NODE_AUTH_TOKEN: ${{ secrets.CORDOVA_NPM_TOKEN }}
